{"ast":null,"code":"var _jsxFileName = \"/home/streamv3/frontend/src/components/UI/StatusBadge.jsx\";\n// src/components/UI/StatusBadge.jsx\nimport React from 'react';\nimport Badge from './Badge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusBadge = ({\n  status\n}) => {\n  // Define variant based on status\n  let variant;\n  switch (status) {\n    case 'running':\n      variant = 'success';\n      break;\n    case 'starting':\n      variant = 'info';\n      break;\n    case 'stopping':\n      variant = 'warning';\n      break;\n    case 'error':\n      variant = 'danger';\n      break;\n    case 'idle':\n    default:\n      variant = 'secondary';\n      break;\n  }\n\n  // Format the status text\n  const formatStatus = status => {\n    return status.charAt(0).toUpperCase() + status.slice(1);\n  };\n  return /*#__PURE__*/_jsxDEV(Badge, {\n    variant: variant,\n    children: formatStatus(status)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_c = StatusBadge;\nexport default StatusBadge;\nvar _c;\n$RefreshReg$(_c, \"StatusBadge\");","map":{"version":3,"names":["React","Badge","jsxDEV","_jsxDEV","StatusBadge","status","variant","formatStatus","charAt","toUpperCase","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/streamv3/frontend/src/components/UI/StatusBadge.jsx"],"sourcesContent":["// src/components/UI/StatusBadge.jsx\nimport React from 'react';\nimport Badge from './Badge';\n\nconst StatusBadge = ({ status }) => {\n  // Define variant based on status\n  let variant;\n  switch (status) {\n    case 'running':\n      variant = 'success';\n      break;\n    case 'starting':\n      variant = 'info';\n      break;\n    case 'stopping':\n      variant = 'warning';\n      break;\n    case 'error':\n      variant = 'danger';\n      break;\n    case 'idle':\n    default:\n      variant = 'secondary';\n      break;\n  }\n  \n  // Format the status text\n  const formatStatus = (status) => {\n    return status.charAt(0).toUpperCase() + status.slice(1);\n  };\n  \n  return <Badge variant={variant}>{formatStatus(status)}</Badge>;\n};\n\nexport default StatusBadge;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAClC;EACA,IAAIC,OAAO;EACX,QAAQD,MAAM;IACZ,KAAK,SAAS;MACZC,OAAO,GAAG,SAAS;MACnB;IACF,KAAK,UAAU;MACbA,OAAO,GAAG,MAAM;MAChB;IACF,KAAK,UAAU;MACbA,OAAO,GAAG,SAAS;MACnB;IACF,KAAK,OAAO;MACVA,OAAO,GAAG,QAAQ;MAClB;IACF,KAAK,MAAM;IACX;MACEA,OAAO,GAAG,WAAW;MACrB;EACJ;;EAEA;EACA,MAAMC,YAAY,GAAIF,MAAM,IAAK;IAC/B,OAAOA,MAAM,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGJ,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC;EACzD,CAAC;EAED,oBAAOP,OAAA,CAACF,KAAK;IAACK,OAAO,EAAEA,OAAQ;IAAAK,QAAA,EAAEJ,YAAY,CAACF,MAAM;EAAC;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAChE,CAAC;AAACC,EAAA,GA5BIZ,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}